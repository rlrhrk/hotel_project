<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.mapper.MemberMapper">
	
	<insert id="insertMember" parameterType="member">
		insert into member values(#{email}, #{password}, #{memberName}, #{birth}, #{gender}, #{tel}, #{address})
	</insert>
	
	<select id="matchMember" parameterType="map" resultType="member">
		select email, pass as password, membername, birth, gender, membertel, memberaddress from member
		where email = #{email} and pass = #{password}
	</select>
	
	<select id="selectMemberId" parameterType="map" resultType="member">
		select email, pass as password, membername, birth, gender, membertel, memberaddress from 
		member where membername = #{memberName} and membertel = #{tel}
	</select>
	
	<select id="selectMemberPass" parameterType="map" resultType="member">
		select email, pass as password, membername, birth, gender, membertel, memberaddress from 
		member where email = #{email} and membername = #{memberName} and membertel = #{tel}
	</select>
	
	<update id="updatePasswd" parameterType="map">
		update member set pass = #{password} where email = #{email}
	</update>
	
	<select id="selectAllMember" resultType="member">
		select email, pass as password, membername as memberName, 
		gender, birth, membertel as tel, memberaddress as address from member
	</select>
	
	<delete id="deleteMember" parameterType="String">
		delete from member where email = #{email}
	</delete>
	
	<update id="updateMember" parameterType="member">
		update member set pass = #{password}, membername = #{memberName}, birth = #{birth},
		gender = #{gender}, membertel = #{tel}, memberaddress = #{address} where email = #{email}
	</update>
	
	<select id="searchMember" parameterType="map" resultType="member">
		select email, pass as password, membername as memberName, 
		gender, birth, membertel as tel, memberaddress as address from member
		where
		<choose>
			<when test="kind.equals('email')">
				email like '%' || #{search} || '%'
			</when>
			<when test="kind.equals('name')">
				membername like '%' || #{search} || '%'
			</when>
			<otherwise>
				membertel like '%' || #{search} || '%'
			</otherwise>
		</choose>
	</select>
	<select id="selectMember" parameterType="String" resultType="member">
		select email, pass as password, membername as memberName, 
		gender, birth, membertel as tel, memberaddress as address from member where email = #{email}
	</select>
	
	<select id="selectGenderCount" parameterType="String" resultType="int">
		select count(m.gender) from roombooking rb, member m where rb.email = m.email and m.gender = #{gender}
	</select>
	
	<select id="selectMonthCount" parameterType="map" resultType="int">
		select count(*) from roombooking where checkin > to_date(('22/' || #{thismonth} ||'/01'), 'yy/mm/dd') and<![CDATA[checkin < to_date(('22/' || #{nextmonth} || '/01'), 'yy/mm/dd')]]> 
	</select>
</mapper>







